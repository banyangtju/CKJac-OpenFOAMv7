/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  7
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
//    default         steadyState;//localEuler;
	default         Euler;
}

gradSchemes
{
    default         fourth;//Gauss linear;
}

divSchemes
{
//    default             none;
	default         Gauss cubic;
/*
    div(phi,U)          Gauss limitedLinearV 1;
    div(phi,Yi)         Gauss limitedLinear01 1;
    div(phi,h)          Gauss limitedLinear 1;
    div(phi,K)          Gauss limitedLinear 1;
    div(phid,p)         Gauss limitedLinear 1;
    div(phi,epsilon)    Gauss limitedLinear 1;
    div(phi,Yi_h)       Gauss limitedLinear01 1;
    div(phi,k)          Gauss limitedLinear 1;
    div(((rho*nuEff)*dev2(T(grad(U)))))     Gauss linear;
	div((nuEff*dev(T(grad(U))))) Gauss linear;
	*/

/*	
	div(phi,U)      bounded  Gauss linearUpwind limited;
	div(phi,Yi)     Gauss linearUpwind limited;
	div(phi,h)      Gauss linearUpwind limited;
	div(phi,Yi_h)   Gauss linearUpwind limited;
	div(((rho*nuEff)*dev2(T(grad(U)))))     Gauss linearUpwind limited;
	*/
	
	div(phi,Yi)	Gauss limitedCubic 1;//Gauss limitedLinear01 1;
	div(phi,h)	Gauss limitedCubic 1;//Gauss linearUpwind limited;//Gauss limitedLinear 1;
	div(phi,U)       Gauss cubic;//Gauss linearUpwind limited;//Gauss LUST grad(U);//Gauss limitedLinearV 1;//Gauss linearUpwind grad(U);//
	div(phi,Yi_h)   Gauss limitedCubic 1;//Gauss limitedLinear 1;//
	div(phi,K)      Gauss cubic;//Gauss linearUpwind limited;//Gauss limitedLinear 1;
//    div(phid,p)     Gauss limitedLinear 1;
//    div(phi,epsilon) Gauss limitedLinear 1;
//    div(phi,k) Gauss limitedLinear 1;
	div(((rho*nuEff)*dev2(T(grad(U))))) Gauss cubic;//Gauss linear;
}

laplacianSchemes
{
    default         Gauss cubic orthogonal;//Gauss linear limited 1;//Gauss linear orthogonal;
}

interpolationSchemes
{
    default         cubic;//linear;
}

snGradSchemes
{
    default         fourth;//orthogonal;
}


// ************************************************************************* //
